@using CacheManager.Core
@using System.Threading
@implements IAsyncDisposable
@inject ICacheManager<uint> CacheManager

<span class="text-red">@online</span>人正在浏览本文

@code {
    [Parameter]
    public int Id { get; set; }
    uint online;
    Timer _timer;

    protected override void OnInitialized()
    {
        online = CacheManager.AddOrUpdate("postOnline:" + Id, 1u, i => i + 1);
        _timer = new Timer(_ =>
        {
            online = CacheManager.Get("postOnline:" + Id);
            InvokeAsync(StateHasChanged);
        }, null, 0, 1000);
    }

    /// <summary>以异步方式执行与释放或重置非托管资源相关的应用程序定义的任务。</summary>
    /// <returns>一个表示异步释放操作的任务。</returns>
    public ValueTask DisposeAsync()
    {
        online = CacheManager.AddOrUpdate("postOnline:" + Id, 1u, i =>
        {
            try
            {
                checked
                {
                    return i - 1;
                }
            }
            catch
            {
                return 0;
            }
        });
        return _timer.DisposeAsync();
    }
}
